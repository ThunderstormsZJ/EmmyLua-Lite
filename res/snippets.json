{
	"local": {
		"prefix": "local",
		"body": "local ",
		"description": "local",
		"scope": "source.lua"
	},
	"false": {
		"prefix": "false",
		"body": "false",
		"description": "false",
		"scope": "source.lua"
	},
	"true": {
		"prefix": "true",
		"body": "true",
		"description": "true",
		"scope": "source.lua"
	},
	"nil": {
		"prefix": "nil",
		"body": "nil",
		"description": "nil",
		"scope": "source.lua"
	},
	"then": {
		"prefix": "then",
		"body": "then\n",
		"description": "then",
		"scope": "source.lua"
	},
	"do": {
		"prefix": "do",
		"body": "do\n",
		"description": "do",
		"scope": "source.lua"
	},
	"else": {
		"prefix": "else",
		"body": "else\n",
		"description": "else",
		"scope": "source.lua"
	},
	"end": {
		"prefix": "end",
		"body": "end",
		"description": "end",
		"scope": "source.lua"
	},
	"while": {
		"prefix": "while",
		"body": "while ${1:} do\n  ${2:}  \nend",
		"description": "while",
		"scope": "source.lua"
	},
	"if": {
		"prefix": "if",
		"body": "if ${1:} then\n  ${2:}  \nend",
		"description": "if",
		"scope": "source.lua"
	},
	"ifel": {
		"prefix": "ifel",
		"body": "if ${1:} then\n    \nelse\n    \nend",
		"description": "ifel",
		"scope": "source.lua"
	},
	"elif": {
		"prefix": "elif",
		"body": "elseif ${1:} then\n    \n",
		"description": "elif",
		"scope": "source.lua"
	},
	"and": {
		"prefix": "and",
		"body": "and ${1:} ",
		"description": "and",
		"scope": "source.lua"
	},
	"or": {
		"prefix": "or",
		"body": "or ${1:} ",
		"description": "or",
		"scope": "source.lua"
	},
	"not": {
		"prefix": "not",
		"body": "not ${1:} ",
		"description": "not",
		"scope": "source.lua"
	},
	"for": {
		"prefix": "for",
		"body": "for ${1:i} = ${2:1}, ${3:10} do\n    \nend",
		"description": "for i=1,10",
		"scope": "source.lua"
	},
	"fori": {
		"prefix": "fori",
		"body": "for ${1:i}, ${2:v} in ipairs(${3:}) do\n    \nend",
		"description": "for i,v in ipairs()",
		"scope": "source.lua"
	},
	"forp": {
		"prefix": "forp",
		"body": "for ${1:k}, ${2:v} in pairs(${3:}) do\n    \nend",
		"description": "for k,v in pairs()",
		"scope": "source.lua"
	},
	"localfunc": {
		"prefix": "localfunc",
		"body": "local ${1:} = function (${2:})\n  ${3:}  \nend",
		"description": "function",
		"scope": "source.lua"
	},
	"func": {
		"prefix": "func",
		"body": [
			"---${2:函数的描述}",
            "---author ${3:JunZhou} $CURRENT_YEAR/$CURRENT_MONTH/$CURRENT_DATE/ $CURRENT_HOUR:$CURRENT_MINUTE",
            "---@return ${4|table,string,number|} @",
            "function $TM_FILENAME_BASE:${1:FunctionName}()",
            "    ${0:--Pass}",
            "end"
		],
		"description": "function",
		"scope": "source.lua"
	},
	"return": {
		"prefix": "return",
		"body": "return ${1:}",
		"description": "return",
		"scope": "source.lua"
	},
	"#reg": {
		"prefix": "#reg",
		"body": "--region ${1:}\n ${2:} \n--endregion",
		"description": "region",
		"scope": "source.lua"
	}
}